
 second:
    1.安装vue  npm install vue --save 

      引用vue

      import Vue from 'vue';

      const app = new Vue({
          el:'#app',
          data:{
              message:"test"
          }
      })

      注意  由两种形态
        1.runtime-only  代码中，不可以由任何的template，既模板不起作用，像是vue 的{{}} 这种语法不起作用
        2.runtime-compiler 代理中可以由template，因为由compiler可以用于编译模板。
      添加下列配置以使用
        resolve: {
        alias: {
              'vue$': 'vue/dist/vue.esm.js'
          }
          //相当于指定这个目录的js去处理 这样就是runtime-compiler
      }
    
    2.形态的演进，从app.js到App.vue

    3.用loader加载 .vue文件
    npm install  vue-loader vue-template-compiler --save-dev
    webpack 配置
      Vue Loader 的配置和其它的 loader 不太一样。除了通过一条规则将 vue-loader 应用到所有扩展名为 .vue 的文件上之外，请确保在你的 webpack 配置中添加 Vue Loader 的插件：

      // webpack.config.js
      const VueLoaderPlugin = require('vue-loader/lib/plugin')

      module.exports = {
        module: {
          rules: [
            // ... 其它规则
            {
              test: /\.vue$/,
              loader: 'vue-loader'
            }
          ]
        },
        plugins: [
          // 请确保引入这个插件！
          new VueLoaderPlugin()
        ]
      }

      这个插件是必须的！ 它的职责是将你定义过的其它规则复制并应用到 .vue 文件里相应语言的块。例如，如果你有一条匹配 /\.js$/ 的规则，那么它会应用到 .vue 文件里的 <script> 块。

      